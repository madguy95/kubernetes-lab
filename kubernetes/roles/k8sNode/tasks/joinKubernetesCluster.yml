---
- name: Create kubernetes pki directory
  file:
    path: /etc/kubernetes/pki
    state: directory

- name: Obtain join string from kubernetes control plane
  delegate_to: "{{ initial_control_plane_server }}"
  ansible.builtin.shell:
    cmd: kubeadm token create --print-join-command --ttl=1h
  register: kubeadm_join_string

- name: Join kubernetes cluster [kubeadm join]
  ansible.builtin.shell:
    cmd: "{{ kubeadm_join_string.stdout }}"
  register: kubeadm_join_result

- name: Record kubeadm join stdout
  ansible.builtin.copy:
    content: "{{ kubeadm_join_result.stdout }}"
    dest: "/etc/kubernetes/kubeadm-join.stdout"

- name: Record kubeadm join stderr
  ansible.builtin.copy:
    content: "{{ kubeadm_join_result.stderr }}"
    dest: "/etc/kubernetes/kubeadm-join.stderr"
# - name: wait until node is in ready state
#   delegate_to: "{{ initial_control_plane_server }}"
#   environment:
#     KUBECONFIG: /etc/kubernetes/admin.conf
#   ansible.builtin.shell:
#     cmd: |
#       kubectl get nodes {{ ansible_hostname }} --no-headers -o custom-columns=STATUS:status.conditions\[\?\(\@.type==\"Ready\"\)\].status
#   register: node_status
#   until: node_status.stdout == 'True'
#   delay: 10
#   retries: 30
