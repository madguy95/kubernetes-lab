---
- name: Create containerd config file
  file:
    path: "/etc/modules-load.d/containerd.conf"
    state: "touch"

- name: Add conf for containerd
  blockinfile:
    path: "/etc/modules-load.d/containerd.conf"
    block: |
      overlay
      br_netfilter

- name: modprobe
  shell: |
    sudo modprobe overlay
    sudo modprobe br_netfilter

# - name: Load br_netfilter kernel module on boot
#   ansible.builtin.copy:
#     src: files/etc/modules-load.d/k8s.conf
#     dest: /etc/modules-load.d/k8s.conf

# - name: Load br_netfilter kernel module
#   community.general.modprobe:
#     name: "{{module}}"
#     state: present
#   vars:
#     module: "{{item}}"
#   with_items: 
#       - br_netfilter
#       - overlay

# - name: Let iptables see bridged traffic
#   ansible.builtin.copy:
#     src: files/etc/sysctl.d/k8s.conf
#     dest: /etc/sysctl.d/k8s.conf
#   register: sysctlConfigured

# - name: Apply sysctl changes
#   command: "sysctl --system"
#   when: sysctlConfigured.changed

- name: Set system configurations for Kubernetes networking
  file:
    path: "/etc/sysctl.d/99-kubernetes-cri.conf"
    state: "touch"

- name: Add conf for containerd
  blockinfile:
    path: "/etc/sysctl.d/99-kubernetes-cri.conf"
    block: |
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1

- name: Apply new settings
  command: sudo sysctl --system

- name: Installing required packages
  apt:
    name: firewalld
    state: present

- name: Starting and Enabling the required services
  service:
    name: firewalld
    state: started
    enabled: yes

- name: Allow Network Ports in Firewalld
  ansible.posix.firewalld:
    port: "{{ item }}"
    state: enabled
    permanent: yes
    immediate: yes
  with_items: "{{ master_ports if ('k8sControlPlanes' in group_names) else worker_ports }}"

- name: Allow Network Ports in Firewalld
  ansible.posix.firewalld:
    masquerade: yes
    state: enabled
    permanent: yes

# - name: Remove config.toml
#   become: true
#   shell: |
#     rm /etc/containerd/config.toml
#     systemctl restart containerd

- name: install containerd
  shell: |
          sudo apt-get update && sudo apt-get install -y containerd
          sudo mkdir -p /etc/containerd
          sudo containerd config default | sudo tee /etc/containerd/config.toml
          sudo systemctl restart containerd
