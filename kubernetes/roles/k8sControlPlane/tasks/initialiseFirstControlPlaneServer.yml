---
- name: Initialise kubernetes cluster [kubeadm init]
  ansible.builtin.shell: |
    kubeadm init \
      --control-plane-endpoint {{ k8s_control_plane_ip }}:8443 \
      --apiserver-advertise-address={{adv_ip}} \
      --pod-network-cidr={{ cidr_v }} \
  register: kubeadm_init_result
  failed_when: kubeadm_init_result.stdout.find("kubeadm join") == -1

- name: Record kubeadm init stdout
  ansible.builtin.copy:
    content: "{{ kubeadm_init_result.stdout }}"
    dest: "/etc/kubernetes/kubeadm-init.stdout"

- name: Record kubeadm init stderr
  ansible.builtin.copy:
    content: "{{ kubeadm_init_result.stderr }}"
    dest: "/etc/kubernetes/kubeadm-init.stderr"

- pause: seconds=10

- name: Create .kube config folder for ansible user
  ansible.builtin.file:
    path: "~{{ ansible_ssh_user }}/.kube"
    state: directory
    owner: "{{ ansible_ssh_user }}"

- name: Copy admin.conf to .kube folder
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "~{{ ansible_ssh_user }}/.kube/config"
    owner: "{{ ansible_ssh_user }}"
    remote_src: yes

- name: Create .kube folder config folder for root user
  ansible.builtin.file:
    path: "/root/.kube"
    state: directory
    owner: "root"

- name: Copy admin.conf to .kube folder
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/root/.kube/config"
    owner: "root"
    remote_src: yes
