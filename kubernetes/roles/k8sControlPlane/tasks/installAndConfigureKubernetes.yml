---

# - name: load br_netfilter kernel module on boot
#   ansible.builtin.copy:
#     src: files/etc/modules-load.d/k8s.conf
#     dest: /etc/modules-load.d/k8s.conf

# - name: load br_netfilter kernel module
#   community.general.modprobe:
#     name: br_netfilter
#     state: present

# - name: let iptables see bridged traffic
#   ansible.builtin.copy:
#     src: files/etc/sysctl.d/k8s.conf
#     dest: /etc/sysctl.d/k8s.conf
#   register: sysctlConfigured

# - name: apply sysctl changes
#   command: 'sysctl --system'
#   when: sysctlConfigured.changed

- name: Add k8s gpg key
  ansible.builtin.shell:
    cmd: curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor > /usr/share/keyrings/kubernetes-archive-keyring.gpg
    creates: /usr/share/keyrings/kubernetes-archive-keyring.gpg
    warn: false

- name: Add K8s repository
  ansible.builtin.apt_repository:
    repo: 'deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main'
    state: present
    update_cache: yes

- name: Install k8s packages kubelet, kubeadm, kubectl
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
    - kubelet
    - kubeadm
    - kubectl
  notify: hold k8s packages

- name: Enable service kubelet, and enable persistently
  service:
    name: kubelet
    enabled: yes

# - name: Installing Kubectl command line on master.
#   apt:
#     name:
#       - kubectl
#     state: present
#     force: yes
    
- name: Configure kubectl command auto-completion.
  become: true
  become_user: "{{kube_user}}"
  lineinfile:
    dest: $HOME/.bashrc
    line: 'source <(kubectl completion bash)'
    insertafter: EOF