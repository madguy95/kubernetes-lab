---

# - name: load br_netfilter kernel module on boot
#   ansible.builtin.copy:
#     src: files/etc/modules-load.d/k8s.conf
#     dest: /etc/modules-load.d/k8s.conf

# - name: load br_netfilter kernel module
#   community.general.modprobe:
#     name: br_netfilter
#     state: present

# - name: let iptables see bridged traffic
#   ansible.builtin.copy:
#     src: files/etc/sysctl.d/k8s.conf
#     dest: /etc/sysctl.d/k8s.conf
#   register: sysctlConfigured

# - name: apply sysctl changes
#   command: 'sysctl --system'
#   when: sysctlConfigured.changed

- name: Add k8s gpg key
  ansible.builtin.shell:
    cmd: curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor > /usr/share/keyrings/kubernetes-archive-keyring.gpg
    creates: /usr/share/keyrings/kubernetes-archive-keyring.gpg
    warn: false

- name: Add K8s repository
  ansible.builtin.apt_repository:
    repo: 'deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main'
    state: present
    update_cache: yes

- name: Install kubelet
  apt:
    name: kubelet={{kube_ver}}
    state: present
    update_cache: true

- name: Install kubeadm
  apt:
    name: kubeadm={{kube_ver}}
    state: present

- name: Install kubectl
  apt:
    name: kubectl={{kube_ver}}
    state: present
    force: yes

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ hostvars[inventory_hostname].ansible_host }}
    create: yes

- name: Enable service kubelet, and enable persistently
  service:
    name: kubelet
    enabled: yes

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

# - name: Installing Kubectl command line on master.
#   apt:
#     name:
#       - kubectl
#     state: present
#     force: yes
    
# - name: Configure kubectl command auto-completion.
#   become: true
#   become_user: "{{ ansible_ssh_user }}"
#   lineinfile:
#     dest: $HOME/.bashrc
#     line: 'source <(kubectl completion bash)'
#     insertafter: EOF